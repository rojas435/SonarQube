# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ComplementaryProduct {
  description: String
  id: Float!
  image_url: String
  name: String!
  price: Float
}

type Container {
  id: String!
  image_url: String
  name: String!
}

input CreateComplementaryProductDto {
  description: String
  image_url: String
  name: String!
  price: Float
}

input CreateContainerDto {
  image_url: String!
  name: String!
}

input CreateCustomCandleComplementaryProductDto {
  complementaryProductId: Int!
  customCandleId: String!
}

input CreateCustomCandleDto {
  containerId: String!
  customImageUrl: String
  fragranceId: String!
  name: String
  notes: String
  price: Float!
  qrUrl: String
  status: String
  userId: String
}

input CreateUserDto {
  email: String!
  name: String!
  password: String!
}

type CustomCandle {
  container: Container!
  customImageUrl: String
  fragrance: Fragrance!
  id: String!
  name: String
  notes: String
  price: Float!
  qrUrl: String
  status: String
  user: User
}

type CustomCandleComplementaryProduct {
  complementaryProduct: ComplementaryProduct!
  customCandle: CustomCandle!
  id: Int!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Fragrance {
  id: String!
  name: String!
}

type Mutation {
  createComplementaryProduct(createComplementaryProductDto: CreateComplementaryProductDto!): ComplementaryProduct!
  createContainer(createContainerDto: CreateContainerDto!): Container!
  createCustomCandle(createCustomCandleDto: CreateCustomCandleDto!): CustomCandle!
  createCustomCandleComplementaryProduct(createCustomCandleComplementaryProductDto: CreateCustomCandleComplementaryProductDto!): CustomCandleComplementaryProduct!
  createUser(createUserDto: CreateUserDto!): User!
  deleteContainer(id: String!): Boolean!
  deleteUser(id: String!): Boolean!
  removeComplementaryProduct(id: Float!): Boolean!
  removeCustomCandle(id: String!): CustomCandle!
  removeCustomCandleComplementaryProduct(id: Int!): Boolean!
  updateComplementaryProduct(id: Float!, updateComplementaryProductDto: UpdateComplementaryProductDto!): ComplementaryProduct!
  updateContainer(id: String!, updateContainerDto: UpdateContainerDto!): Container!
  updateCustomCandle(id: String!, updateCustomCandleDto: UpdateCustomCandleDto!): CustomCandle!
  updateUser(id: String!, updateUserDto: UpdateUserDto!): User!
}

type Query {
  complementaryProduct(id: Float!): ComplementaryProduct!
  complementaryProducts: [ComplementaryProduct!]!
  container(id: String!): Container!
  containers: [Container!]!
  customCandle(id: String!): CustomCandle!
  customCandleComplementaryProduct(id: Int!): CustomCandleComplementaryProduct!
  customCandleComplementaryProducts: [CustomCandleComplementaryProduct!]!
  customCandleComplementaryProductsByCustomCandle(customCandleId: String!): [CustomCandleComplementaryProduct!]!
  customCandles: [CustomCandle!]!
  customCandlesByUser(userId: String!): [CustomCandle!]!
  hello: String!
  testField: String!
  testQuery: String!
  user(id: String!): User!
  users: [User!]!
}

input UpdateComplementaryProductDto {
  description: String
  image_url: String
  name: String
  price: Float
}

input UpdateContainerDto {
  image_url: String
  name: String
}

input UpdateCustomCandleDto {
  containerId: String
  customImageUrl: String
  fragranceId: String
  name: String
  notes: String
  price: Float
  qrUrl: String
  status: String
  userId: String
}

input UpdateUserDto {
  currentPassword: String
  email: String
  name: String
  password: String
  role: String
}

type User {
  created_at: DateTimeISO!
  email: String!
  id: String!
  name: String
  password: String!
  role: String!
}